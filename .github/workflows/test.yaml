name: Test Suite

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest 

    steps:
      - uses: actions/checkout@v3 

      - name: Tidy
        run: go mod tidy

      - name: Install dependencies
        run: go mod download

      - name: Create directory for decoded secret (optional)
        run: mkdir secrets

      - name: Decode Firebase secret (optional)**
        run: |
            echo "${{ secrets.ENV_TEST }}" | base64 --decode > pkg/test/cmd/.env.test
        if: always()  

      - name: Decode Firebase secret (optional)**
        run: |
            echo "${{ secrets.FIREBASE_SECRET }}" | base64 --decode > todoapp-firebase-admin-sdk.json
        if: always()  

      - name: Verify decoded Firebase secret file
        run: |
          if [ -f "todoapp-firebase-admin-sdk.json" ]; then
            echo "Firebase secret file decoded successfully!"
          else
            echo "Error: Firebase secret file not found!"
            exit 1  # Fail the workflow if the file is missing
          fi

      - name: Set permissions for Firebase secret file
        run: chmod 600 todoapp-firebase-admin-sdk.json

      - name: Print Working Directory
        run: pwd

      - name: Change directory and run tests
        run: cd pkg/test/cmd && APP_ENV=test DB_PATH=test.db  FIREBASE_SECRET=ewogICAgInR5cGUiOiAic2VydmljZV9hY2NvdW50IiwKICAgICJwcm9qZWN0X2lkIjogInRvZG9hcHAtMmQxNTYiLAogICAgInByaXZhdGVfa2V5X2lkIjogImU3YzA1MjM4MzgwYWI5NjM3ZmNkZDMzMjIwNjI0ZmVkOGIxNThhYjAiLAogICAgInByaXZhdGVfa2V5IjogIi0tLS0tQkVHSU4gUFJJVkFURSBLRVktLS0tLVxuTUlJRXZRSUJBREFOQmdrcWhraUc5dzBCQVFFRkFBU0NCS2N3Z2dTakFnRUFBb0lCQVFESXc5bjFMcDY3TTgxN1xuN0FzMy9lTjgxZ0IybTVVRXVIUVU5ZFFGZ3dyWVp4OWtabUlQcjhVS2FOTmkrb3haUXBvM1JXZ2ZWSE1HNlFlaVxuNkpPVSt6SndxMXlPK0x1Mkl3THFDc3ZIWjNjSnhOdHdqVUlUdzQzYTBockdaZmVScXM5RGlxekc2ZmczUm9mNlxuUjg1RWFNbTUvTFZBRmxhTHYvalpQWGhWZVBUVjRkdS9Bd1dvd1BtS1g5Nlo3aWI5MStqL3FXbEtZVjFxeUhkL1xuRVgvTDBDZ1MvbjJEdzRpeU1SN1hYR2JNWGdIK1B6SGdNdzVhQks5eGpRMlQraTYvc1hodWo3em5yT2ZPTUQvS1xubjFvazFXVVZBWVJZMlhqZERvUGZzbjZJTmh6WkJLVm81OXJpVmNnczRJenh5UEYvc3crTXFlb0xaK3FFYTFFQ1xubktRU1JuNzNBZ01CQUFFQ2dnRUFWWUZVYXVBWUtwSzlpWEhXdFZva2NSNlR3L0F2WDN0UHRUMmR0MXRBV3pwUVxuWEdwZWlWL0xBOHZ4ZTg1SnlCcGRvL3lqZy9ScnFSM0dhdE96UjFoVSt6ZUFqRVBUYnBjcXZwTXFoeHJCMEI5UFxuZG5nekZFZk5PczBSS2o1eldrN3RSMDdnbHpjK3lBdjZEZFpYT3p1Rjd2aDZHWGxxRXNzSUtUM002bHBCckhWclxub3FsZTAxTVJnb2U1bmMwNGRVVkZmcDhmU0s0RnZLWTc0NFZNSG8vYmlYb0dRdzNoYk9JRC9KcW9PcDltR2RHdlxuK0QwS2k5SGg5QWpIaVh6WEhFWjNvUXBlSG8vUW1jZ2U3dkhMcS9PRU5ZSFQzSkJDWlNIa2JOL1RQb1U1VDl0NVxuOFM4NHQvTTlsZnZCUjN3R24wVzJXaWtoMVZkdXpWNTNpQk5FTVJ2MndRS0JnUUR5SFlPUm9NUlhkWGY3R2V3UVxuU3hqTWdNOG1QV3VURU5ITkdxaHBTaC8yRWptVWhuREhNTzVnSC8wTUhhZXY4MDQ0TG9lbWpLaHI1dlRuejIvclxuYnJWMHp4UnEvdXU5TXpFWTFwK1JjVUFjVG5hQjA3ZDdGa2pMZHRJMnE2M0pvVkMwK1FudUNtejNoTDYyUmJHNlxuaDlRL0VMZklEY1lUZEI0a3VTRUpDRERzalFLQmdRRFVSMGFtQjJIcTQrR0tYN3dJY09ERHJZeVVJVThzZ0NlWlxueXpJaWJsckU5VExUY2MxbExQOFdNS3ZXb3B2bVB2Y01pSWpTTDVFYzkwOEk2VUtTVkU3MnRya0k1T0o4VkM5SFxuVWNPRk4vVFFwMkNXWWVBdlU5U0hDbWZNNXhnUXNkTm1ZUFllOXc2Tk54L3dCNXl5eXRwSmVtampSVHVxamlsM1xuOHMyWkYyL1Nrd0tCZ1FDUDU3end6TmFHaVRxRUZCYzhZL1pjYnQ4eEFtYXpKZGNkaW8rNDdTYnNFazhKR1pOa1xud1krZHNNV3Q4dDVkZFViem02eGk4TTJXUE5NcUNTQ2psY3ppbmNhc0JkTEdST3dVc0ZSdGxSdWU5My8ya0lsSVxuN3FqYnprY0oyYWJVNWozYkl2Nms3cXR2dndXL3Z0THhaSlJoMjZUd2trYzkvdEYvMEUxeldkd0NiUUtCZ0JWblxuV21oRE5reEl6ZVQxNGkrM3NmSUkvYk94NkJuRWtqbWZrMTZGWWdHWjk1WDZVNHR3RGdoZXYvVFVVSVBXdFhJK1xuRWcyZlhqSmRmVXFZdW0ybXNvK052UHA0bVoyUG4zVEJlY1ZrN3ZwYTVoSkRyQ2NaZk1SZytEWmcxcnhZTWNpUVxuM2tBaENRYVVHRlJMY0RGVzRzdWwzQTJPWFlYRTc4bDRZZUtkeWxpaEFvR0FYMmtaZnE0anNWbVBQWldONWRTVlxuVEQ1cmVtcFNOU3grTmdhUVNSSk50bGMvS2htcmlQZ2I0MmNJRmxkMkZTdUFQTjN2Y291ajBnMmJZeEJJNGhpMFxuRzZQRnlta0NGOXlCMVhmd0thMEIwUlQwZzdxNW1hMDFOckMrc3VBLzlJTXBOQVE5aFdYTTh6MlY1YzVHQTJSWlxudHpoMFkvYmpsTjRRdnpyZ1JaVWFmOWc9XG4tLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tXG4iLAogICAgImNsaWVudF9lbWFpbCI6ICJmaXJlYmFzZS1hZG1pbnNkay11OHN6akB0b2RvYXBwLTJkMTU2LmlhbS5nc2VydmljZWFjY291bnQuY29tIiwKICAgICJjbGllbnRfaWQiOiAiMTE2MTYwNjU0OTgyODYxOTYwMjI3IiwKICAgICJhdXRoX3VyaSI6ICJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvYXV0aCIsCiAgICAidG9rZW5fdXJpIjogImh0dHBzOi8vb2F1dGgyLmdvb2dsZWFwaXMuY29tL3Rva2VuIiwKICAgICJhdXRoX3Byb3ZpZGVyX3g1MDlfY2VydF91cmwiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vb2F1dGgyL3YxL2NlcnRzIiwKICAgICJjbGllbnRfeDUwOV9jZXJ0X3VybCI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9yb2JvdC92MS9tZXRhZGF0YS94NTA5L2ZpcmViYXNlLWFkbWluc2RrLXU4c3pqJTQwdG9kb2FwcC0yZDE1Ni5pYW0uZ3NlcnZpY2VhY2NvdW50LmNvbSIsCiAgICAidW5pdmVyc2VfZG9tYWluIjogImdvb2dsZWFwaXMuY29tIgp9Cg== LOG_LEVEL=debug  go run .
        if: always()


      - name: Upload test artifacts (optional)
        uses: actions/upload-artifact@v3
        if: failure() 
        with:
          name: test-results
          path: ${{ github.workspace }}/

      - name: Fail workflow on test failures (optional)
        uses: styfle/cancel-workflow-action@0.8.0 
        if: failure()  
        with:
          message: 'Tests failed. Fix the errors before merging.'
